"use strict";var app=evo.module("peApp",["evo","evo.evoTraining.services","evo.common.directives","peControllers","ngCookies","ngRoute"]);app.config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"hello",controller:"MainController"}).when("/edit/:id",{templateUrl:"edit",controller:"EditCtrl"}).when("/delete/:id",{templateUrl:"delete",controller:"DeleteCtrl"}),b.html5Mode(!0)}]),app.run(["zipService","events",function(a,b){b.dispatch(b.types.VIEW_LOADING),a.fetchSeed()}]),evo.module("peControllers").controller("LoadingGlobalController",["$scope","events","evoBrowser",function(a,b,c){function d(b){a.isLoading=b}a.supportsCss3Animation=c.supportsCSS3Animation(),a.bars=function(a){for(var b=[],c=0;a>c;++c)b.push(c);return b},a.$on(b.types.VIEW_LOADED,function(){d(!1)}),a.$on(b.types.VIEW_LOADING,function(){d(!0)}),a.$on("$routeChangeStart",function(){d(!0)})}]),evo.module("peControllers",["evo"]).controller("EditCtrl",["$scope","$log","zipService","$routeParams","$location",function(a,b,c,d,e){a.recordID=d.id,c.fetchRecord(a.recordID).then(function(b){a.record=b}),a.cancel=function(){e.path("/")},a.update=function(){a.validUpdate()?(c.updateRecord(a.record),e.path("/")):a.showError=!0},a.validUpdate=function(){return a.record.city.length>0&&a.record.state.length>0&&a.record.loc[0].length>0&&a.record.loc[1].length>0&&a.record.pop.length>0}}]),evo.module("peControllers",["evo"]).controller("MainController",["$rootScope","$scope","$log","evoAPI","zipService","$location","events",function(a,b,c,d,e,f,g){c.log("Loading web main controller"),a.$on("dataFetched",function(){b.table.data=void 0,b.table.data=e.data,g.dispatch(g.types.VIEW_LOADED)}),b.table={options:{pagination:{itemsPerPage:10},toolbar:{search:{by:!0,exclude:["edit"]}},columns:{_id:"string",city:"string",pop:"string",state:"string",loc:"string",edit:{type:"button",icon:"fa fa-pencil-square-o",width:"50px",textAlign:"center",onclick:function(a,c,d,e){var g=b.table.data[e]._id;f.path("/edit/"+g)}}}},data:{}},b.table.data=e.data}]),evo.module("evo.common.directives").directive("loadingGlobal",["$log","$rootScope","orderByFilter","filterFilter",function(a,b,c,d){return{restrict:"EA",templateUrl:"loadingModalGlobal",controller:"LoadingGlobalController"}}]),evo.module("evo.evoTraining.services").factory("events",["$rootScope",function(a){function b(b,d){if(!b||"string"!=typeof arguments[0])throw new Error("Event type string must be first argument; all other optional args can follow.");b==c.VIEW_LOADING||b==c.VIEW_LOADED?a.$broadcast(b,d):a.$emit(b,d)}var c={VIEW_LOADING:"viewLoading",VIEW_LOADED:"viewLoaded",TICKETS_REFRESHED:"ticketsRefreshed",ORDERS_REFRESHED:"ordersRefreshed",API_TIMEOUT_ERROR:"apiTimeout"};return{types:c,dispatch:b}}]),evo.module("evo.evoTraining.services",[]).service("zipService",["evoAPI","$rootScope","$log","events",function(a,b,c,d){var e=this;e.data={},e.fetchSeed=function(){a.callFunction("findAll").then(function(a){e.data=a.result,b.$broadcast("dataFetched")},function(a){c.error(a)})},e.fetchSmallSeed=function(){return a.callFunction("getZipByCity","BARRE").then(function(a){return e.data=a.result,b.$broadcast("dataFetched"),e.data},function(a){c.error(a)})},e.fetchRecord=function(b){return a.callFunction("getRecordByID",b).then(function(a){return a.result},function(a){c.error(a)})},e.updateRecord=function(b){return a.callFunction("updateRecord",b).then(function(){e.fetchSeed()},function(a){c.error(a)})},b.$on("addRecord",function(b,f){d.dispatch(d.types.VIEW_LOADING),console.log("zipService: Received event with message "+JSON.stringify(f.data)),a.callFunction("addRecord",f.data).then(function(){e.fetchSeed()},function(a){c.error(a),d.dispatch(d.types.VIEW_LOADED)})}),b.$on("updateRecord",function(b,f){d.dispatch(d.types.VIEW_LOADING),console.log("zipService: Received event with message "+JSON.stringify(f.data)),a.callFunction("updateRecord",f.data).then(function(){e.fetchSeed()},function(a){c.error(a),d.dispatch(d.types.VIEW_LOADED)})})}]);